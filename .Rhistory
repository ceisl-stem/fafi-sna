label = "agent",
label.rectangle = FALSE,
repel = TRUE,
theme = theme_minimal(),
xlab = "Betweenness Centrality (scaled)",
ylab = "Eigenvector Centrality (scaled)",
point = TRUE,
ylim = c(key.ymin, key.ymax),
xlim = c(key.xmin, key.xmax),
show.legend = FALSE,
show.legend.text = FALSE,
color = "color_code",
palette = the.palette,
legend = "bottom",
conf.int = FALSE,
cor.coef = FALSE
) +
#geom_smooth(method = "lm", color = "#EEEEEE", se = FALSE, fullrange = TRUE, linetype = "solid") +
#scale_color_gradient2(low = iu.gradient$low[the.cluster],
#                      high = iu.gradient$high[the.cluster],
#                      mid = iu.gradient$mid[the.cluster]) +
geom_hline(yintercept = key.ymedian) +
geom_vline(xintercept = key.xmedian) +
geom_label(
aes(
x = key.xmax,
y = key.ymin,
label = "Gatekeepers",
hjust = 1
),
color = "#330D2B",
fill = "#DECADC"
) +
geom_label(
aes(
x = key.xmax,
y = key.ymax,
label = "Hubs",
hjust = 1
),
color = "#330D2B",
fill = "#DECADC"
) +
geom_label(
aes(
x = key.xmin,
y = key.ymax,
label = "Pulse-Takers",
hjust = 0
),
color = "#330D2B",
fill = "#DECADC"
)
key.plot
key.plot <-
ggscatter(
key.frame,
x = "scaled_betweenness",
y = "scaled_eigen",
label = "agent",
label.rectangle = FALSE,
repel = TRUE,
theme = theme_minimal(),
xlab = "Betweenness Centrality (scaled)",
ylab = "Eigenvector Centrality (scaled)",
point = TRUE,
ylim = c(key.ymin, key.ymax),
xlim = c(key.xmin, key.xmax),
show.legend = FALSE,
color = "color_code",
palette = the.palette,
legend = "none",
conf.int = FALSE,
cor.coef = FALSE
) +
#geom_smooth(method = "lm", color = "#EEEEEE", se = FALSE, fullrange = TRUE, linetype = "solid") +
#scale_color_gradient2(low = iu.gradient$low[the.cluster],
#                      high = iu.gradient$high[the.cluster],
#                      mid = iu.gradient$mid[the.cluster]) +
geom_hline(yintercept = key.ymedian) +
geom_vline(xintercept = key.xmedian) +
geom_label(
aes(
x = key.xmax,
y = key.ymin,
label = "Gatekeepers",
hjust = 1
),
color = "#330D2B",
fill = "#DECADC"
) +
geom_label(
aes(
x = key.xmax,
y = key.ymax,
label = "Hubs",
hjust = 1
),
color = "#330D2B",
fill = "#DECADC"
) +
geom_label(
aes(
x = key.xmin,
y = key.ymax,
label = "Pulse-Takers",
hjust = 0
),
color = "#330D2B",
fill = "#DECADC"
)
key.plot
calculate.keyactors <- function(the.frame) {
#the.filename <- glue("output/keyactors{the.cluster}-plot.pdf")
key.frame <- the.frame %>%
select(betweenness, eigen)
key.frame$scaled_betweenness <-
rescale(key.frame$betweenness, to = c(0.01, 0.99))
key.frame$scaled_eigen <- rescale(key.frame$eigen, to = c(0, 1))
#key.frame$interaction_score <-
#  (key.frame$scaled_betweenness * key.frame$scaled_eigen)
#key.frame$interaction_score <-
#  rescale(key.frame$interaction_score, to = c(0, 1))
key.frame$agent <- rownames(key.frame)
rownames(key.frame) <- NULL
#key.frame$cluster <- the.cluster
key.res <- lm(eigen ~ betweenness, data = key.frame)$residuals
key.frame <- transform(key.frame, residuals = key.res)
key.frame <- key.frame %>%
select(
agent,
betweenness,
scaled_betweenness,
eigen,
scaled_eigen,
#interaction_score,
residuals
) #%>%
#filter(!manuscriptID %in% analysis.cluster.frame$manuscriptID)
node.data <- data.frame(agent = key.frame$agent) %>%
mutate(color_code = substr(key.frame$agent, 1, 2))
key.frame <- key.frame %>%
left_join(node.data, by = "agent")
key.ymedian <- median(key.frame$eigen)
key.xmedian <- median(key.frame$scaled_betweenness)
key.frame <- key.frame %>%
mutate(keystatus = case_when((scaled_eigen > key.ymedian &
scaled_betweenness > key.xmedian) ~ "Hub",
(scaled_eigen > key.ymedian &
scaled_betweenness < key.xmedian) ~ "Pulse-Taker",
(scaled_eigen < key.ymedian &
scaled_betweenness > key.ymedian) ~ "Gatekeeper"
)) %>%
na.omit()
key.xmin <- min(key.frame$scaled_betweenness) - 0.1
key.xmax <- max(key.frame$scaled_betweenness) + 0.1
key.ymin <- min(key.frame$scaled_eigen) - 0.1
key.ymax <- max(key.frame$scaled_eigen) + 0.1
key.plot <-
ggscatter(
key.frame,
x = "scaled_betweenness",
y = "scaled_eigen",
label = "agent",
label.rectangle = FALSE,
repel = TRUE,
theme = theme_minimal(),
xlab = "Betweenness Centrality (scaled)",
ylab = "Eigenvector Centrality (scaled)",
point = TRUE,
ylim = c(key.ymin, key.ymax),
xlim = c(key.xmin, key.xmax),
show.legend = FALSE,
color = "color_code",
palette = the.palette,
legend = "none",
conf.int = FALSE,
cor.coef = FALSE
) +
#geom_smooth(method = "lm", color = "#EEEEEE", se = FALSE, fullrange = TRUE, linetype = "solid") +
#scale_color_gradient2(low = iu.gradient$low[the.cluster],
#                      high = iu.gradient$high[the.cluster],
#                      mid = iu.gradient$mid[the.cluster]) +
geom_hline(yintercept = key.ymedian) +
geom_vline(xintercept = key.xmedian) +
geom_label(
aes(
x = key.xmax,
y = key.ymin,
label = "Gatekeepers",
hjust = 1
),
color = "#330D2B",
fill = "#DECADC"
) +
geom_label(
aes(
x = key.xmax,
y = key.ymax,
label = "Hubs",
hjust = 1
),
color = "#330D2B",
fill = "#DECADC"
) +
geom_label(
aes(
x = key.xmin,
y = key.ymax,
label = "Pulse-Takers",
hjust = 0
),
color = "#330D2B",
fill = "#DECADC"
)
key.plot
#ggsave(
#  key.plot,
#  filename = the.filename,
#  width = 11.5,
#  height = 8,
#  units = "in",
#  dpi = 300
#)
key.frame <- key.frame %>%
#dplyr::group_by(keystatus) %>%
arrange(desc(keystatus), desc(interaction_score), agent)# %>%
#slice(1:20) %>% ungroup()
return(key.frame)
}
full.key <- calculate.keyactors(full.cent)
full.key <- calculate.keyactors(full.cent)
calculate.keyactors <- function(the.frame) {
#the.filename <- glue("output/keyactors{the.cluster}-plot.pdf")
key.frame <- the.frame %>%
select(betweenness, eigen)
key.frame$scaled_betweenness <-
rescale(key.frame$betweenness, to = c(0.01, 0.99))
key.frame$scaled_eigen <- rescale(key.frame$eigen, to = c(0, 1))
key.frame$interaction_score <-
(key.frame$scaled_betweenness * key.frame$scaled_eigen)
key.frame$interaction_score <-
rescale(key.frame$interaction_score, to = c(0, 1))
key.frame$agent <- rownames(key.frame)
rownames(key.frame) <- NULL
#key.frame$cluster <- the.cluster
key.res <- lm(eigen ~ betweenness, data = key.frame)$residuals
key.frame <- transform(key.frame, residuals = key.res)
key.frame <- key.frame %>%
select(
agent,
betweenness,
scaled_betweenness,
eigen,
scaled_eigen,
interaction_score,
residuals
) #%>%
#filter(!manuscriptID %in% analysis.cluster.frame$manuscriptID)
node.data <- data.frame(agent = key.frame$agent) %>%
mutate(color_code = substr(key.frame$agent, 1, 2))
key.frame <- key.frame %>%
left_join(node.data, by = "agent")
key.ymedian <- median(key.frame$eigen)
key.xmedian <- median(key.frame$scaled_betweenness)
key.frame <- key.frame %>%
mutate(keystatus = case_when((scaled_eigen > key.ymedian &
scaled_betweenness > key.xmedian) ~ "Hub",
(scaled_eigen > key.ymedian &
scaled_betweenness < key.xmedian) ~ "Pulse-Taker",
(scaled_eigen < key.ymedian &
scaled_betweenness > key.ymedian) ~ "Gatekeeper"
)) %>%
na.omit()
key.xmin <- min(key.frame$scaled_betweenness) - 0.1
key.xmax <- max(key.frame$scaled_betweenness) + 0.1
key.ymin <- min(key.frame$scaled_eigen) - 0.1
key.ymax <- max(key.frame$scaled_eigen) + 0.1
key.plot <-
ggscatter(
key.frame,
x = "scaled_betweenness",
y = "scaled_eigen",
label = "agent",
label.rectangle = FALSE,
repel = TRUE,
theme = theme_minimal(),
xlab = "Betweenness Centrality (scaled)",
ylab = "Eigenvector Centrality (scaled)",
point = TRUE,
ylim = c(key.ymin, key.ymax),
xlim = c(key.xmin, key.xmax),
show.legend = FALSE,
color = "color_code",
palette = the.palette,
legend = "none",
conf.int = FALSE,
cor.coef = FALSE
) +
#geom_smooth(method = "lm", color = "#EEEEEE", se = FALSE, fullrange = TRUE, linetype = "solid") +
#scale_color_gradient2(low = iu.gradient$low[the.cluster],
#                      high = iu.gradient$high[the.cluster],
#                      mid = iu.gradient$mid[the.cluster]) +
geom_hline(yintercept = key.ymedian) +
geom_vline(xintercept = key.xmedian) +
geom_label(
aes(
x = key.xmax,
y = key.ymin,
label = "Gatekeepers",
hjust = 1
),
color = "#330D2B",
fill = "#DECADC"
) +
geom_label(
aes(
x = key.xmax,
y = key.ymax,
label = "Hubs",
hjust = 1
),
color = "#330D2B",
fill = "#DECADC"
) +
geom_label(
aes(
x = key.xmin,
y = key.ymax,
label = "Pulse-Takers",
hjust = 0
),
color = "#330D2B",
fill = "#DECADC"
)
key.plot
#ggsave(
#  key.plot,
#  filename = the.filename,
#  width = 11.5,
#  height = 8,
#  units = "in",
#  dpi = 300
#)
key.frame <- key.frame %>%
#dplyr::group_by(keystatus) %>%
arrange(desc(keystatus), desc(interaction_score), agent)# %>%
#slice(1:20) %>% ungroup()
return(key.frame)
}
full.key <- calculate.keyactors(full.cent)
full.cent <- full.frame |>
select("from", "to") |>
calculate.centrality()
full.key <- calculate.keyactors(full.cent)
calculate.keyactors <- function(the.frame) {
#the.filename <- glue("output/keyactors{the.cluster}-plot.pdf")
key.frame <- the.frame %>%
select(betweenness, eigen)
key.frame$scaled_betweenness <-
rescale(key.frame$betweenness, to = c(0.01, 0.99))
key.frame$scaled_eigen <- rescale(key.frame$eigen, to = c(0, 1))
key.frame$interaction_score <-
(key.frame$scaled_betweenness * key.frame$scaled_eigen)
key.frame$interaction_score <-
rescale(key.frame$interaction_score, to = c(0, 1))
key.frame$agent <- rownames(key.frame)
rownames(key.frame) <- NULL
#key.frame$cluster <- the.cluster
key.res <- lm(eigen ~ betweenness, data = key.frame)$residuals
key.frame <- transform(key.frame, residuals = key.res)
key.frame <- key.frame %>%
select(
agent,
betweenness,
scaled_betweenness,
eigen,
scaled_eigen,
interaction_score,
residuals
) #%>%
#filter(!manuscriptID %in% analysis.cluster.frame$manuscriptID)
node.data <- data.frame(agent = key.frame$agent) %>%
mutate(color_code = substr(key.frame$agent, 1, 2))
key.frame <- key.frame %>%
left_join(node.data, by = "agent")
key.ymedian <- median(key.frame$eigen)
key.xmedian <- median(key.frame$scaled_betweenness)
key.frame <- key.frame %>%
mutate(keystatus = case_when((scaled_eigen > key.ymedian &
scaled_betweenness > key.xmedian) ~ "Hub",
(scaled_eigen > key.ymedian &
scaled_betweenness < key.xmedian) ~ "Pulse-Taker",
(scaled_eigen < key.ymedian &
scaled_betweenness > key.ymedian) ~ "Gatekeeper"
)) %>%
na.omit()
key.xmin <- min(key.frame$scaled_betweenness) - 0.1
key.xmax <- max(key.frame$scaled_betweenness) + 0.1
key.ymin <- min(key.frame$scaled_eigen) - 0.1
key.ymax <- max(key.frame$scaled_eigen) + 0.1
key.plot <-
ggscatter(
key.frame,
x = "scaled_betweenness",
y = "scaled_eigen",
label = "agent",
label.rectangle = FALSE,
repel = TRUE,
theme = theme_minimal(),
xlab = "Betweenness Centrality (scaled)",
ylab = "Eigenvector Centrality (scaled)",
point = TRUE,
ylim = c(key.ymin, key.ymax),
xlim = c(key.xmin, key.xmax),
show.legend = FALSE,
color = "color_code",
palette = the.palette,
legend = "none",
conf.int = FALSE,
cor.coef = FALSE
) +
#geom_smooth(method = "lm", color = "#EEEEEE", se = FALSE, fullrange = TRUE, linetype = "solid") +
#scale_color_gradient2(low = iu.gradient$low[the.cluster],
#                      high = iu.gradient$high[the.cluster],
#                      mid = iu.gradient$mid[the.cluster]) +
geom_hline(yintercept = key.ymedian) +
geom_vline(xintercept = key.xmedian) +
geom_label(
aes(
x = key.xmax,
y = key.ymin,
label = "Gatekeepers",
hjust = 1
),
color = "#330D2B",
fill = "#DECADC"
) +
geom_label(
aes(
x = key.xmax,
y = key.ymax,
label = "Hubs",
hjust = 1
),
color = "#330D2B",
fill = "#DECADC"
) +
geom_label(
aes(
x = key.xmin,
y = key.ymax,
label = "Pulse-Takers",
hjust = 0
),
color = "#330D2B",
fill = "#DECADC"
)
print(key.plot)
#ggsave(
#  key.plot,
#  filename = the.filename,
#  width = 11.5,
#  height = 8,
#  units = "in",
#  dpi = 300
#)
key.frame <- key.frame %>%
#dplyr::group_by(keystatus) %>%
arrange(desc(keystatus), desc(interaction_score), agent)# %>%
#slice(1:20) %>% ungroup()
return(key.frame)
}
full.key <- calculate.keyactors(full.cent)
pates.key <- calculate.keyactors(pates.full.cent)
ncfl.full.cent <- ncfl.frame |>
select("from", "to") |>
calculate.centrality()
ncfl.key <- calculate.keyactors(ncfl.full.cent)
View(ncfl.frame)
nc.cent <- ncfl.frame |>
select("from", "to") |>
filter("from" == "NC01" | "from" == "NC02" | "from" == "NC03") |>
calculate.centrality()
nc.key <- calculate.keyactors(nc.full.cent)
nc.key <- calculate.keyactors(nc.cent)
View(nc.cent)
nc.cent <- ncfl.frame |>
select("from", "to") |>
filter("from" == "NC01" | "from" == "NC02" | "from" == "NC03")# |>
nc.cent <- ncfl.frame |>
select("from", "to") |>
dplyr::filter("from" == "NC01" | "from" == "NC02" | "from" == "NC03")# |>
nc.cent <- ncfl.frame |>
select("from", "to")# |>
nc.cent <- ncfl.frame |>
select("from", "to") |>
dplyr::filter("from" == "NC01" | "from" == "NC02" | "from" == "NC03")# |>
nc.cent <- ncfl.frame |>
select("from", "to") |>
dplyr::filter(from == "NC01" | from == "NC02" | from == "NC03")# |>
nc.cent <- ncfl.frame |>
select("from", "to") |>
dplyr::filter(from == "NC01" | from == "NC02" | from == "NC03") |>
calculate.centrality()
nc.key <- calculate.keyactors(nc.cent)
fl.cent <- ncfl.frame |>
select("from", "to") |>
dplyr::filter(from == "FL01" | from == "FL02" | from == "FL03") |>
calculate.centrality()
fl.key <- calculate.keyactors(fl.cent)
full.key <- calculate.keyactors(full.cent)
